name: Mobile client - E2E (iOS)

on: [push]

permissions: read-all

env:
  MAESTRO_VERSION: 1.32.0
  XC_SIMULATOR_NAME: iPhone 14
  SERVER_URL: http://127.0.0.1:3000/graphql

jobs:
  run_mobile_client_ios_e2e:
    runs-on: macos-12

    strategy:
      matrix:
        node-version: [19.0.0]

    steps:
      # Setup Docker if runner is macOS
      - name: Setup docker and docker-compose (missing on MacOS)
        run: |
          brew install docker docker-compose

          # Link the Docker Compose v2 plugin so it's understood by the docker CLI
          mkdir -p ~/.docker/cli-plugins
          ln -sfn /usr/local/opt/docker-compose/bin/docker-compose ~/.docker/cli-plugins/docker-compose

          colima start --mount-type 9p

      - uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 1

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.6.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Maestro
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          export PATH="$PATH":"$HOME/.maestro/bin"
          maestro -v

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Create Settings.toml
        run: |
          cat <<EOT >> ./server/Settings.toml
          host = "127.0.0.1"
          port = "3000"
          postgres_url = "${{ secrets.CI_POSTGRES_URL }}"
          test_postgres_url = "${{ secrets.CI_TEST_POSTGRES_URL }}"
          redis_url = "${{ secrets.CI_REDIS_URL }}"
          test_redis_url = "${{ secrets.CI_TEST_REDIS_URL }}"
          secret = "${{ secrets.CI_SECRET }}"
          EOT

      - uses: Swatinem/rust-cache@v2

      - name: Install Server Dependencies
        run: |
          cargo install --force cargo-make
          cargo install cargo-watch
        working-directory: ./server

      - name: Run Server
        run: |
          cargo make ci > server.log 2>&1 &
          server_pid=$!

          # Wait for server to be ready
          while ! grep -q "Server running at 127.0.0.1:3000" server.log; do
          sleep 5
          done
        working-directory: ./server

      - name: Install IDB Companion via Homebrew
        run: |
          brew tap facebook/fb
          brew install facebook/fb/idb-companion

      - name: Run iOS Simulator
        run: |
          echo "All valid available device types"
          xcrun simctl list devicetypes

          echo "All valid and available runtimes"
          xcrun simctl list runtimes

          echo "Run simulator"
          xcrun simctl boot "${{ env.XC_SIMULATOR_NAME }}"

      - name: Install React Native dependencies
        run: yarn
        working-directory: ./client-mobile

      - name: Run Expo app and tests
        run: |
          EXPO_PUBLIC_API_URL=${{ env.SERVER_URL }} yarn ios > expo.log 2>&1 &

          # Wait for Expo to be ready
          timeout=600  # 10 minutes max
          while ! grep -q "Waiting on http://localhost:8081" expo.log && [ $timeout -gt 0 ]; do
          sleep 5
          timeout=$((timeout - 5))
          done

          # Output Expo logs for debugging
          cat expo.log

          if [ $timeout -le 0 ]; then
          echo "Expo did not start within 10 minutes."
          exit 1
          fi

          # Run your e2e tests
          yarn test-e2e
        working-directory: ./client-mobile
